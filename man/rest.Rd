% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package.R
\docType{package}
\name{rest}
\alias{rest}
\alias{rest-package}
\title{REST API Access}
\usage{
rest(
  endpoint,
  ...,
  per_page = NULL,
  .token = NULL,
  .destfile = NULL,
  .overwrite = FALSE,
  .api_url = NULL,
  .method = "GET",
  .limit = NULL,
  .accept = "application/vnd.github.v3+json",
  .send_headers = NULL,
  .progress = TRUE
)
}
\arguments{
\item{endpoint}{API endpoint. Must be one of the following forms:
\itemize{
\item \verb{METHOD path}, e.g. \code{GET /rate_limit},
\item \code{path}, e.g. \verb{/rate_limit},
\item \verb{METHOD url}, e.g. \verb{GET https://api.domain.com/v1/rate_limit},
\item \code{url}, e.g. \verb{https://api.domain.com/v1/rate_limit}.
}

If the method is not supplied, will use \code{.method}, which defaults
to \code{"GET"}.}

\item{...}{Name-value pairs giving API parameters. Will be matched
into \code{endpoint} placeholders, sent as query parameters in GET
requests, and as a JSON body of POST requests. If there is only one
unnamed parameter, and it is a raw vector, then it will not be JSON
encoded, but sent as raw data, as is. This can be used for example to
add assets to releases. Named \code{NULL} values are silently dropped,
and named \code{NA} values trigger an error.}

\item{per_page}{Number of items to return per page. If omitted,
will be substituted by \code{max(.limit, 100)} if \code{.limit} is set,
otherwise determined by the API (never greater than 100).}

\item{.token}{Authentication token. Defaults to \code{GITHUB_PAT} or
\code{GITHUB_TOKEN} environment variables, in this order if any is set.
See \code{\link[=rest_token]{rest_token()}} if you need more flexibility, e.g. different tokens
for different GitHub Enterprise deployments.}

\item{.destfile}{path to write response to disk.  If NULL (default), response will
be processed and returned as an object.  If path is given, response will
be written to disk in the form sent.}

\item{.overwrite}{if \code{.destfile} is provided, whether to overwrite an
existing file.  Defaults to FALSE.}

\item{.api_url}{Github API url (default: \url{https://api.github.com}). Used
if \code{endpoint} just contains a path. Defaults to \code{GITHUB_API_URL}
environment variable if set.}

\item{.method}{HTTP method to use if not explicitly supplied in the
\code{endpoint}.}

\item{.limit}{Number of records to return. This can be used
instead of manual pagination. By default it is \code{NULL},
which means that the defaults of the GitHub API are used.
You can set it to a number to request more (or less)
records, and also to \code{Inf} to request all records.
Note, that if you request many records, then multiple GitHub
API calls are used to get them, and this can take a potentially
long time.}

\item{.accept}{The value of the \code{Accept} HTTP header. Defaults to
\code{"application/vnd.github.v3+json"} . If \code{Accept} is given in
\code{.send_headers}, then that will be used. This paramter can be used to
provide a custom media type, in order to access a preview feature of
the API.}

\item{.send_headers}{Named character vector of header field values
(except \code{Authorization}, which is handled via \code{.token}). This can be
used to override or augment the default \code{User-Agent} header:
\code{"https://github.com/r-lib/gh"}.}

\item{.progress}{Whether to show a progress indicator for calls that
need more than one HTTP request.}
}
\value{
Answer from the API as a \code{rest_response} object, which is also a
\code{list}. Failed requests will generate an R error. Requests that
generate a raw response will return a raw vector.
}
\description{
Minimal wrapper to work with REST APIs.

This is an extremely minimal client. You need to know the API
to be able to use this client. All this function does is:
\itemize{
\item Try to substitute each listed parameter into \code{endpoint}, using the
\verb{:parameter} notation.
\item If a GET request (the default), then add all other listed parameters
as query parameters.
\item If not a GET request, then send the other parameters in the request
body, as JSON.
\item Convert the response to an R list using \code{\link[jsonlite:fromJSON]{jsonlite::fromJSON()}}.
}
}
\seealso{
Useful links:
\itemize{
  \item \url{https://github.com/coatless/rest}
  \item Report bugs at \url{https://github.com/coatless/rest/issues}
}

}
\author{
\strong{Maintainer}: Gábor Csárdi \email{csardi.gabor@gmail.com} [contributor]

Authors:
\itemize{
  \item Jennifer Bryan
  \item Hadley Wickham
}

}
